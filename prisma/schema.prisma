// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  hashedPassword String
  createdAt      DateTime @default(now())
  updatedat      DateTime @updatedAt
  isAdmin        Boolean  @default(false)

  sessions  Session[]
  posts     Post[]
  profile   Profile   @relation(fields: [profileId], references: [id])
  profileId Int       @unique
}

model Session {
  id        String   @id
  expiresAt DateTime

  user   User   @relation(references: [id], fields: [userId], onDelete: Cascade)
  userId String @db.Uuid
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title     String
  content   String?
  slug      String  @unique
  published Boolean @default(false)

  User   User?   @relation(fields: [userId], references: [id])
  userId String? @db.Uuid
}

model Profile {
  id Int @id @default(autoincrement())

  email        String  @unique
  firstName    String
  lastName     String
  isSubscribed Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User?
}
